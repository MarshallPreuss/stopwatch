{"ast":null,"code":"var _jsxFileName = \"/Users/pscbus_1019/Desktop/stopwatch/src/Components/Stopwatch.js\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.increment = () => {\n      this.setState({\n        lap: this.state.lap + 1\n      });\n    };\n\n    this.startTimer = () => {\n      if (this.state.status != \"running\") {\n        this.setState({\n          status: \"running\"\n        });\n        this.timer = setInterval(() => {\n          this.increment();\n        }, 1000);\n      }\n    };\n\n    this.stopTimer = () => {\n      if (this.state.status != \"stopped\") {\n        clearInterval(this.timer);\n        this.setState({\n          status: \"stopped\"\n        });\n      } else {\n        this.startTimer();\n      }\n    };\n\n    this.resetTimer = () => {\n      clearInterval(this.timer);\n      this.setState({\n        status: \"stopped\",\n        lap: 0\n      });\n    };\n\n    this.state = {\n      status: \"stopped\",\n      lap: 0,\n      color: \"#00B1E1\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: this.state.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, this.state.lap, \" sec\", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.startTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.stopTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Pause\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.resetTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Reset\"));\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/pscbus_1019/Desktop/stopwatch/src/Components/Stopwatch.js"],"names":["React","Component","Counter","constructor","props","increment","setState","lap","state","startTimer","status","timer","setInterval","stopTimer","clearInterval","resetTimer","color","render","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC5BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,SATmB,GASP,MAAM;AACd,WAAKC,QAAL,CAAc;AACZC,QAAAA,GAAG,EAAE,KAAKC,KAAL,CAAWD,GAAX,GAAiB;AADV,OAAd;AAGH,KAbkB;;AAAA,SAenBE,UAfmB,GAeN,MAAM;AACf,UAAK,KAAKD,KAAL,CAAWE,MAAX,IAAqB,SAA1B,EAAqC;AACjC,aAAKJ,QAAL,CAAc;AACVI,UAAAA,MAAM,EAAE;AADE,SAAd;AAGA,aAAKC,KAAL,GAAaC,WAAW,CAAE,MAAM;AAC5B,eAAKP,SAAL;AACH,SAFuB,EAEtB,IAFsB,CAAxB;AAGH;AACJ,KAxBkB;;AAAA,SAyBnBQ,SAzBmB,GAyBP,MAAM;AACd,UAAK,KAAKL,KAAL,CAAWE,MAAX,IAAqB,SAA1B,EAAqC;AACjCI,QAAAA,aAAa,CAAC,KAAKH,KAAN,CAAb;AACA,aAAKL,QAAL,CAAc;AACVI,UAAAA,MAAM,EAAE;AADE,SAAd;AAGH,OALD,MAKO;AACH,aAAKD,UAAL;AACH;AACJ,KAlCkB;;AAAA,SAmCnBM,UAnCmB,GAmCN,MAAM;AACfD,MAAAA,aAAa,CAAC,KAAKH,KAAN,CAAb;AACA,WAAKL,QAAL,CAAc;AACVI,QAAAA,MAAM,EAAE,SADE;AAEVH,QAAAA,GAAG,EAAE;AAFK,OAAd;AAIH,KAzCkB;;AAEjB,SAAKC,KAAL,GAAa;AACXE,MAAAA,MAAM,EAAE,SADG;AAEXH,MAAAA,GAAG,EAAE,CAFM;AAGXS,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAqCDC,EAAAA,MAAM,GAAG;AACL,wBACA;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAE,KAAKV,KAAL,CAAWQ;AAA7B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKR,KAAL,CAAWD,GADZ,uBAEA;AAAQ,MAAA,OAAO,EAAE,KAAKE,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFA,eAGA;AAAQ,MAAA,OAAO,EAAE,KAAKI,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHA,eAIA;AAAQ,MAAA,OAAO,EAAE,KAAKE,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJA,CADA;AAQH;;AAtD2B;;AAyD9B,eAAeb,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        status: \"stopped\",\n        lap: 0,\n        color: \"#00B1E1\",\n      };\n    }\n  \n    increment = () => {\n        this.setState({\n          lap: this.state.lap + 1\n        });\n    }\n\n    startTimer = () => {\n        if ( this.state.status != \"running\") {\n            this.setState({\n                status: \"running\",\n            });\n            this.timer = setInterval( () => {\n                this.increment();\n            },1000);\n        }\n    }\n    stopTimer = () => {\n        if ( this.state.status != \"stopped\") {\n            clearInterval(this.timer); \n            this.setState({\n                status: \"stopped\",\n            });\n        } else {\n            this.startTimer();\n        }\n    }\n    resetTimer = () => {\n        clearInterval(this.timer); \n        this.setState({\n            status: \"stopped\",\n            lap: 0\n        });\n    }\n\n\n    render() {\n        return(\n        <div style={{backgroundColor: this.state.color}}>\n        {this.state.lap} sec\n        <button onClick={this.startTimer}>Start</button>\n        <button onClick={this.stopTimer}>Pause</button>\n        <button onClick={this.resetTimer}>Reset</button>\n        </div>\n        )\n    }\n}\n  \n  export default Counter;"]},"metadata":{},"sourceType":"module"}