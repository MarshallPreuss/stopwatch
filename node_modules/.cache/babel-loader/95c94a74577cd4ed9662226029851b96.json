{"ast":null,"code":"var _jsxFileName = \"/Users/pscbus_1019/Desktop/stopwatch/src/Components/Stopwatch.js\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startTimer = () => {\n      if (this.state.status != \"running\") {\n        this.setState({\n          status: \"running\"\n        });\n        this.timer = setInterval(() => {\n          this.setState({\n            lap: this.lap + 1\n          });\n        });\n      }\n    };\n\n    this.stopTimer = () => {\n      if (this.state.status != \"stopped\") {\n        this.setState({\n          status: \"stopped\"\n        });\n        this.timer = setInterval(() => {\n          this.setState({\n            lap: this.lap + 1\n          });\n        });\n      }\n    };\n\n    this.resetTimer = () => {\n      clearInterval(this.timer);\n      this.setState({\n        status: \"stopped\",\n        lap: 0\n      });\n    };\n\n    this.increment = this.increment.bind(this);\n    this.state = {\n      status: \"stopped\",\n      lap: 0,\n      color: \"#00B1E1\"\n    };\n  }\n\n  increment() {\n    this.setState({\n      count: this.state.lap + 1\n    });\n    this.toggleColor();\n  }\n\n  toggleColor() {\n    if (this.state.color == \"#00B1E1\") {\n      this.setState({\n        color: \"#E9573F\"\n      });\n    } else {\n      this.setState({\n        color: \"#00B1E1\"\n      });\n    }\n\n    this.setState({\n      if: this.state.lap + 1\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: this.state.color\n      },\n      onClick: this.increment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, this.state.lap, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.startTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.increment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"Pause\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.increment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Reset\"));\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/pscbus_1019/Desktop/stopwatch/src/Components/Stopwatch.js"],"names":["React","Component","Counter","constructor","props","startTimer","state","status","setState","timer","setInterval","lap","stopTimer","resetTimer","clearInterval","increment","bind","color","count","toggleColor","if","render","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC5BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiCnBC,UAjCmB,GAiCN,MAAM;AACf,UAAK,KAAKC,KAAL,CAAWC,MAAX,IAAqB,SAA1B,EAAqC;AACjC,aAAKC,QAAL,CAAc;AACVD,UAAAA,MAAM,EAAE;AADE,SAAd;AAGA,aAAKE,KAAL,GAAaC,WAAW,CAAE,MAAM;AAC5B,eAAKF,QAAL,CAAc;AAAEG,YAAAA,GAAG,EAAE,KAAKA,GAAL,GAAW;AAAlB,WAAd;AACH,SAFuB,CAAxB;AAGH;AACJ,KA1CkB;;AAAA,SA2CnBC,SA3CmB,GA2CP,MAAM;AACd,UAAK,KAAKN,KAAL,CAAWC,MAAX,IAAqB,SAA1B,EAAqC;AACjC,aAAKC,QAAL,CAAc;AACVD,UAAAA,MAAM,EAAE;AADE,SAAd;AAGA,aAAKE,KAAL,GAAaC,WAAW,CAAE,MAAM;AAC5B,eAAKF,QAAL,CAAc;AAAEG,YAAAA,GAAG,EAAE,KAAKA,GAAL,GAAW;AAAlB,WAAd;AACH,SAFuB,CAAxB;AAGH;AACJ,KApDkB;;AAAA,SAqDnBE,UArDmB,GAqDN,MAAM;AACfC,MAAAA,aAAa,CAAC,KAAKL,KAAN,CAAb;AACA,WAAKD,QAAL,CAAc;AACVD,QAAAA,MAAM,EAAE,SADE;AAEVI,QAAAA,GAAG,EAAE;AAFK,OAAd;AAIH,KA3DkB;;AAEjB,SAAKI,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKV,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,SADG;AAEXI,MAAAA,GAAG,EAAE,CAFM;AAGXM,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAEDF,EAAAA,SAAS,GAAG;AACR,SAAKP,QAAL,CAAc;AACZU,MAAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWK,GAAX,GAAiB;AADZ,KAAd;AAGA,SAAKQ,WAAL;AACH;;AAEDA,EAAAA,WAAW,GAAG;AACV,QAAG,KAAKb,KAAL,CAAWW,KAAX,IAAoB,SAAvB,EAAkC;AAC9B,WAAKT,QAAL,CAAc;AACVS,QAAAA,KAAK,EAAE;AADG,OAAd;AAGH,KAJD,MAIO;AACH,WAAKT,QAAL,CAAc;AACVS,QAAAA,KAAK,EAAE;AADG,OAAd;AAGH;;AACD,SAAKT,QAAL,CAAc;AACZY,MAAAA,EAAE,EAAE,KAAKd,KAAL,CAAWK,GAAX,GAAiB;AADT,KAAd;AAKH;;AA8BDU,EAAAA,MAAM,GAAG;AACL,wBACA;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAE,KAAKhB,KAAL,CAAWW;AAA7B,OAAZ;AAAiD,MAAA,OAAO,EAAE,KAAKF,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2E,KAAKT,KAAL,CAAWK,GAAtF,eACA;AAAQ,MAAA,OAAO,EAAE,KAAKN,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,eAEA;AAAQ,MAAA,OAAO,EAAE,KAAKU,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFA,eAGA;AAAQ,MAAA,OAAO,EAAE,KAAKA,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHA,CADA;AAOH;;AAvE2B;;AA0E9B,eAAeb,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n    constructor(props) {\n      super(props);\n      this.increment = this.increment.bind(this)\n      this.state = {\n        status: \"stopped\",\n        lap: 0,\n        color: \"#00B1E1\",\n      };\n    }\n  \n    increment() {\n        this.setState({\n          count: this.state.lap + 1\n        });\n        this.toggleColor();\n    }\n\n    toggleColor() {\n        if(this.state.color == \"#00B1E1\") {\n            this.setState({\n                color: \"#E9573F\"\n            });\n        } else {\n            this.setState({\n                color: \"#00B1E1\"\n            });\n        }\n        this.setState({\n          if: this.state.lap + 1\n        });\n\n        \n    }\n    startTimer = () => {\n        if ( this.state.status != \"running\") {\n            this.setState({\n                status: \"running\",\n            });\n            this.timer = setInterval( () => {\n                this.setState({ lap: this.lap + 1 });\n            });\n        }\n    }\n    stopTimer = () => {\n        if ( this.state.status != \"stopped\") {\n            this.setState({\n                status: \"stopped\",\n            });\n            this.timer = setInterval( () => {\n                this.setState({ lap: this.lap + 1 });\n            });\n        }\n    }\n    resetTimer = () => {\n        clearInterval(this.timer); \n        this.setState({\n            status: \"stopped\",\n            lap: 0\n        });\n    }\n\n\n    render() {\n        return(\n        <div style={{backgroundColor: this.state.color}} onClick={this.increment}>{this.state.lap}\n        <button onClick={this.startTimer}>Start</button>\n        <button onClick={this.increment}>Pause</button>\n        <button onClick={this.increment}>Reset</button>\n        </div>\n        )\n    }\n}\n  \n  export default Counter;"]},"metadata":{},"sourceType":"module"}